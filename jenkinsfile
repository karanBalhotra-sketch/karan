pipeline {
    agent any

    environment {
        EMAIL_RECIPIENT = 'karanbalhotra@gmail.com'
    }

    stages {
        stage('Build') {
            steps {
                script {
                    // Example using Maven for build automation
                    bat 'mvn clean package'
                }
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                script {
                    // Example using JUnit for unit and integration tests
                    bat 'mvn test'
                }
            }
        }
        stage('Code Analysis') {
            steps {
                script {
                    // Example using SonarQube for code analysis
                    bat 'mvn sonar:sonar'
                }
            }
        }
        stage('Security Scan') {
            steps {
                script {
                    // Example using OWASP Dependency-Check for security scanning
                    bat 'dependency-check.bat --project MyProject --scan .'
                }
            }
        }
        stage('Deploy to Staging') {
            steps {
                script {
                    // Example deploy to AWS EC2 using AWS CLI
                    bat 'aws deploy push --application-name MyApp --s3-location s3://mybucket/myapp.zip'
                }
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                script {
                    // Example running integration tests in the staging environment
                    bat 'mvn verify -Denv=staging'
                }
            }
        }
        stage('Deploy to Production') {
            steps {
                script {
                    // Example deploy to AWS EC2 using AWS CLI
                    bat 'aws deploy push --application-name MyApp --s3-location s3://mybucket/myapp-prod.zip'
                }
            }
        }
    }

    post {
        always {
            script {
                emailext(
                    subject: "Pipeline Notification: ${currentBuild.currentResult}",
                    body: "The Jenkins pipeline has completed with status: ${currentBuild.currentResult}. Logs are attached.",
                    to: "${env.EMAIL_RECIPIENT}",
                    attachLog: true
                )
            }
        }
        // Notification after specific stages
        stage('Unit and Integration Tests') {
            post {
                always {
                    script {
                        emailext(
                            subject: "Unit and Integration Tests Notification: ${currentBuild.currentResult}",
                            body: "The Unit and Integration Tests stage has completed with status: ${currentBuild.currentResult}. Logs are attached.",
                            to: "${env.EMAIL_RECIPIENT}",
                            attachLog: true
                        )
                    }
                }
            }
        }
        stage('Security Scan') {
            post {
                always {
                    script {
                        emailext(
                            subject: "Security Scan Notification: ${currentBuild.currentResult}",
                            body: "The Security Scan stage has completed with status: ${currentBuild.currentResult}. Logs are attached.",
                            to: "${env.EMAIL_RECIPIENT}",
                            attachLog: true
                        )
                    }
                }
            }
        }
    }
}
